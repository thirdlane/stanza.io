{"version":3,"sources":["../src/message.js"],"names":[],"mappings":";;;;;;6BAAgC,gBAAgB;;AAGhD,IAAI,SAAS,GAAG,EAAE,CAAC;;AAGnB,SAAS,CAAC,aAAa,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE;;AAEtD,QAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;;AAEtB,OAAG,CAAC,MAAM,CAAC;AACP,YAAI,EAAE,IAAI;AACV,iBAAS,EAAE,SAAS;AACpB,eAAO,EAAE,SAAS;AAClB,gBAAQ,EAAE,IAAI;AACd,cAAM,EAAE;AACJ,gBAAI,EAAE,KAAK,CAAC,aAAa,EAAE;AAC3B,cAAE,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;AACzB,cAAE,EAAE,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC;AAClC,gBAAI,EAAE,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC;AACtC,gBAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;AACvC,kBAAM,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,QAAQ,CAAC;AAC1C,wBAAY,EAAE,KAAK,CAAC,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;AAC/D,mBAAO,EAAE,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC;AAC5C,iBAAK,EAAE;AACH,mBAAG,EAAE,SAAS,QAAQ,GAAI;;AAEtB,2BAAO,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvE;aACJ;AACD,gBAAI,EAAE;AACF,mBAAG,EAAE,SAAS,OAAO,GAAI;;AAErB,wBAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;AACxB,2BAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAClC;AACD,mBAAG,EAAE,SAAS,OAAO,CAAE,KAAK,EAAE;;AAE1B,yBAAK,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;iBACvE;aACJ;AACD,qBAAS,EAAE,KAAK,CAAC,OAAO,CAAC,eAzC5B,SAAS,CAyCsB,WAAW,EAAE,WAAW,CAAC;AACrD,qBAAS,EAAE,KAAK,CAAC,OAAO,CAAC,eA1C5B,SAAS,CA0CsB,WAAW,EAAE,CACrC,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CACtD,CAAC;AACF,mBAAO,EAAE,KAAK,CAAC,YAAY,CAAC,eA7C/B,SAAS,CA6CyB,YAAY,EAAE,SAAS,EAAE,IAAI,CAAC;AAC7D,0BAAc,EAAE,KAAK,CAAC,OAAO,CAAC,eA9CjC,SAAS,CA8C2B,QAAQ,EAAE,SAAS,CAAC;AACrD,mBAAO,EAAE,KAAK,CAAC,YAAY,CAAC,eA/C/B,SAAS,CA+CyB,QAAQ,EAAE,UAAU,EAAE,IAAI,CAAC;SAC7D;KACJ,CAAC,CAAC;CACN,CAAC;;qBAGa,UAAU,GAAG,EAAE;;AAE1B,aAAS,CAAC,aAAa,CAAC,GAAG,EAAE,SAAS,EAAE,eAvDnC,SAAS,CAuD6B,MAAM,CAAC,CAAC;AACnD,aAAS,CAAC,aAAa,CAAC,GAAG,EAAE,eAAe,EAAE,eAxDzC,SAAS,CAwDmC,MAAM,CAAC,CAAC;AACzD,aAAS,CAAC,aAAa,CAAC,GAAG,EAAE,kBAAkB,EAAE,eAzD5C,SAAS,CAyDsC,SAAS,CAAC,CAAC;CAClE","file":"message.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nlet internals = {};\n\n\ninternals.defineMessage = function (JXT, name, namespace) {\n\n    let Utils = JXT.utils;\n\n    JXT.define({\n        name: name,\n        namespace: namespace,\n        element: 'message',\n        topLevel: true,\n        fields: {\n            lang: Utils.langAttribute(),\n            id: Utils.attribute('id'),\n            to: Utils.jidAttribute('to', true),\n            from: Utils.jidAttribute('from', true),\n            type: Utils.attribute('type', 'normal'),\n            thread: Utils.textSub(namespace, 'thread'),\n            parentThread: Utils.subAttribute(namespace, 'thread', 'parent'),\n            subject: Utils.textSub(namespace, 'subject'),\n            $body: {\n                get: function getBody$ () {\n\n                    return Utils.getSubLangText(this.xml, namespace, 'body', this.lang);\n                }\n            },\n            body: {\n                get: function getBody () {\n\n                    let bodies = this.$body;\n                    return bodies[this.lang] || '';\n                },\n                set: function setBody (value) {\n\n                    Utils.setSubLangText(this.xml, namespace, 'body', value, this.lang);\n                }\n            },\n            attention: Utils.boolSub(NS.ATTENTION_0, 'attention'),\n            chatState: Utils.enumSub(NS.CHAT_STATES, [\n                'active', 'composing', 'paused', 'inactive', 'gone'\n            ]),\n            replace: Utils.subAttribute(NS.CORRECTION_0, 'replace', 'id'),\n            requestReceipt: Utils.boolSub(NS.RECEIPTS, 'request'),\n            receipt: Utils.subAttribute(NS.RECEIPTS, 'received', 'id')\n        }\n    });\n};\n\n\nexport default function (JXT) {\n\n    internals.defineMessage(JXT, 'message', NS.CLIENT);\n    internals.defineMessage(JXT, 'serverMessage', NS.SERVER);\n    internals.defineMessage(JXT, 'componentMessage', NS.COMPONENT);\n}\n"]}