{"version":3,"sources":["../src/jingle-message.js"],"names":[],"mappings":"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","file":"jingle-message.js","sourcesContent":["import { Namespace as NS } from 'xmpp-constants';\n\n\nexport default function (JXT) {\n\n    let Utils = JXT.utils;\n\n    let Propose = JXT.define({\n        name: 'jingleProposeSession',\n        namespace: NS.JINGLE_MESSAGE_0,\n        element: 'propose',\n        fields: {\n            id: Utils.attribute('id'),\n            applications: {\n                get: function () {\n                    let results = [];\n\n                    let descs = JXT.tagged('jingle-description');\n                    let lookup = {};\n\n                    descs.forEach(function (Desc) {\n                        lookup[Desc.prototype._NS] = Desc;\n                    });\n\n                    console.log(lookup);\n\n                    for (let i = 0; i < this.xml.childNodes.length; i++) {\n                        let child = this.xml.childNodes[i];\n\n                        if (child.localName !== 'description') {\n                            continue;\n                        }\n\n                        if (lookup[child.namespaceURI]) {\n                            results.push(new Desc(null, child, this));\n                        }\n                    }\n\n                    return results;\n                },\n                set: function (applications) {\n\n\n                    let self = this;\n                    let descs = JXT.tagged('jingle-description');\n                    let lookup = {};\n\n                    descs.forEach(function (Desc) {\n                        lookup[Desc.prototype._name] = Desc;\n                    });\n\n                    console.log(lookup);\n\n                    for (let i = 0, len = this.xml.childNodes.length; i < len; i++) {\n                        this.xml.removeChild(this.xml.childNodes[i]);\n                    }\n\n                    applications.forEach(function (app) {\n\n                        if (!app.descType) {\n                            return;\n                        }\n\n                        let Desc = lookup['_' + app.descType];\n                        if (!Desc) {\n                            return;\n                        }\n\n                        let child = new Desc(app);\n\n                        self.xml.appendChild(child.xml);\n                    });\n                }\n            }\n        }\n    });\n\n\n    JXT.withMessage(function (Message) {\n\n        JXT.extend(Message, Propose);\n        JXT.add(Message, 'jingleRetractSession', Utils.subAttribute(NS.JINGLE_MESSAGE_0, 'retract', 'id'));\n        JXT.add(Message, 'jingleAcceptSession', Utils.subAttribute(NS.JINGLE_MESSAGE_0, 'accept', 'id'));\n        JXT.add(Message, 'jingleRejectSession', Utils.subAttribute(NS.JINGLE_MESSAGE_0, 'reject', 'id'));\n        JXT.add(Message, 'jingleStartSession', Utils.subAttribute(NS.JINGLE_MESSAGE_0, 'proceed', 'id'));\n    });\n}\n"]}